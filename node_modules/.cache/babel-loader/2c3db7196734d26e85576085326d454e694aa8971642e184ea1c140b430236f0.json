{"ast":null,"code":"var _jsxFileName = \"/Users/c.savela.smedberg/code_developer/starwars-javascript-project/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport Navbar from \"./components/Navbar\";\nimport { BrowserRouter as Router, Route, Routes } from \"react-router-dom\";\nimport { Container, Dimmer, Loader } from \"semantic-ui-react\";\nimport Films from \"./components/Films\";\nimport Home from \"./components/Home\";\nimport People from \"./components/People\";\nimport Planets from \"./components/Starships\";\nimport Species from \"./components/Species\";\nimport Starships from \"./components/Starships\";\nimport Vehicles from \"./components/Vehicles\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [People, setPeople] = useState([]);\n  const [Films, setFilms] = useState([]);\n  const [Starships, setStarships] = useState([]);\n  const [Vehicles, setVehicles] = useState([]);\n  const [Species, setSpecies] = useState([]);\n  const [Planets, setPlanets] = useState([]);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    async function fetchPeople() {\n      let res = await fetch(\"https://swapi.dev/api/people\");\n      let data = await res.json();\n      setPeople(data.results);\n    }\n    async function fetchFilms() {\n      let res = await fetch(\"https://swapi.dev/api/films\");\n      let data = await res.json();\n      setFilms(data.results);\n    }\n    async function fetchStarships() {\n      let res = await fetch(\"https://swapi.dev/api/starships\");\n      let data = await res.json();\n      setStarships(data.results);\n    }\n    async function fetchVehicles() {\n      let res = await fetch(\"https://swapi.dev/api/vehicles\");\n      let data = await res.json();\n      setVehicles(data.results);\n    }\n    async function fetchSpecies() {\n      let res = await fetch(\"https://swapi.dev/api/species\");\n      let data = await res.json();\n      setSpecies(data.results);\n    }\n    async function fetchPlanets() {\n      let res = await fetch(\"https://swapi.dev/api/planets\");\n      let data = await res.json();\n      setPlanets(data.results);\n    }\n    fetchPeople();\n    fetchFilms();\n    fetchStarships();\n    fetchVehicles();\n    fetchSpecies();\n    fetchPlanets();\n    setLoading(false);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Router, {\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Container, {\n        children: loading ? /*#__PURE__*/_jsxDEV(Dimmer, {\n          active: true,\n          inverted: true,\n          children: /*#__PURE__*/_jsxDEV(Loader, {\n            inverted: true,\n            children: \"Loading...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(Routes, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            path: \"/\",\n            element: /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 40\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/films\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/people\",\n            children: /*#__PURE__*/_jsxDEV(People, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/planets\",\n            children: /*#__PURE__*/_jsxDEV(Planets, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/species\",\n            children: /*#__PURE__*/_jsxDEV(Species, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/starships\",\n            children: /*#__PURE__*/_jsxDEV(Starships, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/vehicles\",\n            children: /*#__PURE__*/_jsxDEV(Vehicles, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(App, \"sb8K1uyLyVIstzcS0eLc4wY1RHw=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Navbar","BrowserRouter","Router","Route","Routes","Container","Dimmer","Loader","Films","Home","People","Planets","Species","Starships","Vehicles","App","setPeople","setFilms","setStarships","setVehicles","setSpecies","setPlanets","loading","setLoading","fetchPeople","res","fetch","data","json","results","fetchFilms","fetchStarships","fetchVehicles","fetchSpecies","fetchPlanets"],"sources":["/Users/c.savela.smedberg/code_developer/starwars-javascript-project/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Navbar from \"./components/Navbar\";\nimport { BrowserRouter as Router, Route, Routes } from \"react-router-dom\";\nimport { Container, Dimmer, Loader } from \"semantic-ui-react\";\nimport Films from \"./components/Films\";\nimport Home from \"./components/Home\";\nimport People from \"./components/People\";\nimport Planets from \"./components/Starships\";\nimport Species from \"./components/Species\";\nimport Starships from \"./components/Starships\";\nimport Vehicles from \"./components/Vehicles\";\n\nfunction App() {\n  const [People, setPeople] = useState([]);\n  const [Films, setFilms] = useState([]);\n  const [Starships, setStarships] = useState([]);\n  const [Vehicles, setVehicles] = useState([]);\n  const [Species, setSpecies] = useState([]);\n  const [Planets, setPlanets] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    async function fetchPeople() {\n      let res = await fetch(\"https://swapi.dev/api/people\");\n      let data = await res.json();\n      setPeople(data.results);\n    }\n\n    async function fetchFilms() {\n      let res = await fetch(\"https://swapi.dev/api/films\");\n      let data = await res.json();\n      setFilms(data.results);\n    }\n\n    async function fetchStarships() {\n      let res = await fetch(\"https://swapi.dev/api/starships\");\n      let data = await res.json();\n      setStarships(data.results);\n    }\n\n    async function fetchVehicles() {\n      let res = await fetch(\"https://swapi.dev/api/vehicles\");\n      let data = await res.json();\n      setVehicles(data.results);\n    }\n\n    async function fetchSpecies() {\n      let res = await fetch(\"https://swapi.dev/api/species\");\n      let data = await res.json();\n      setSpecies(data.results);\n    }\n\n    async function fetchPlanets() {\n      let res = await fetch(\"https://swapi.dev/api/planets\");\n      let data = await res.json();\n      setPlanets(data.results);\n    }\n\n    fetchPeople();\n    fetchFilms();\n    fetchStarships();\n    fetchVehicles();\n    fetchSpecies();\n    fetchPlanets();\n    setLoading(false);\n  }, []);\n\n  return (\n    <>\n      <Router>\n        <Navbar />\n        <Container>\n          {loading ? (\n            <Dimmer active inverted>\n              <Loader inverted>Loading...</Loader>\n            </Dimmer>\n          ) : (\n            <Routes>\n              <Route path=\"/\" element={<Home />}/>\n              <Route path=\"/films\">\n              </Route>\n              <Route path=\"/people\">\n                <People />\n              </Route>\n              <Route path=\"/planets\">\n                <Planets />\n              </Route>\n              <Route path=\"/species\">\n                <Species />\n              </Route>\n              <Route path=\"/starships\">\n                <Starships />\n              </Route>\n              <Route path=\"/vehicles\">\n                <Vehicles />\n              </Route>\n            </Routes>\n          )}\n        </Container>\n      </Router>\n    </>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}