{"ast":null,"code":"var _jsxFileName = \"/Users/c.savela.smedberg/code_developer/swapi-starwars-api/src/components/Films.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { Card, Grid } from \"semantic-ui-react\";\nimport { Container } from \"semantic-ui-react\";\nimport Buttons from \"./Buttons\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Films() {\n  _s();\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    async function fetchFilms() {\n      let res = await fetch(\"https://swapi.dev/api/films\");\n      let data = await res.json();\n      setData(data);\n      setLoading(false);\n    }\n    fetchFilms();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Films\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      columns: 6,\n      children: data === null || data === void 0 ? void 0 : data.results.map((films, i) => {\n        return /*#__PURE__*/_jsxDEV(Grid.Column, {\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            children: /*#__PURE__*/_jsxDEV(Card.Content, {\n              children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n                children: films.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 30,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Card.Description, {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Episode\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 32,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: films.episode_id\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 33,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Opening Crawl\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 34,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: films.opening_crawl\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 35,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Director\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 36,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: films.director\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 37,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Producer\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 38,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: films.producer\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 39,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Release date\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 40,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: films.release_date\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 41,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 31,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 29,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 15\n          }, this)\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(Buttons, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(Films, \"YP7e7Smzxlgf2d3MqLcgRZjo83U=\");\n_c = Films;\nvar _c;\n$RefreshReg$(_c, \"Films\");","map":{"version":3,"names":["React","useState","useEffect","Card","Grid","Container","Buttons","Films","data","setData","loading","setLoading","fetchFilms","res","fetch","json","results","map","films","i","title","episode_id","opening_crawl","director","producer","release_date"],"sources":["/Users/c.savela.smedberg/code_developer/swapi-starwars-api/src/components/Films.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Card, Grid } from \"semantic-ui-react\";\nimport { Container } from \"semantic-ui-react\";\nimport Buttons from \"./Buttons\";\n\nexport default function Films() {\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n  async function fetchFilms() {\n    let res = await fetch(\"https://swapi.dev/api/films\");\n    let data = await res.json();\n    setData(data);\n    setLoading(false);\n  }\n\n  fetchFilms();\n\n}, []);\n  return (\n    <>\n      <h1>Films</h1>\n      <Grid columns={6}>\n        {data?.results.map((films, i) => {\n          return (\n            <Grid.Column key={i}>\n              <Card>\n                <Card.Content>\n                  <Card.Header>{films.title}</Card.Header>\n                  <Card.Description>\n                    <strong>Episode</strong>\n                    <p>{films.episode_id}</p>\n                    <strong>Opening Crawl</strong>\n                    <p>{films.opening_crawl}</p>\n                    <strong>Director</strong>\n                    <p>{films.director}</p>\n                    <strong>Producer</strong>\n                    <p>{films.producer}</p>\n                    <strong>Release date</strong>\n                    <p>{films.release_date}</p>\n                  </Card.Description>\n                </Card.Content>\n              </Card>\n            </Grid.Column>\n          );\n        })}\n      </Grid>\n      <Container>\n          <Buttons></Buttons>\n        </Container>\n    </>\n  );\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,IAAI,EAAEC,IAAI,QAAQ,mBAAmB;AAC9C,SAASC,SAAS,QAAQ,mBAAmB;AAC7C,OAAOC,OAAO,MAAM,WAAW;AAAC;AAAA;AAEhC,eAAe,SAASC,KAAK,GAAG;EAAA;EAC9B,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACS,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAE5CC,SAAS,CAAC,MAAM;IAChB,eAAeU,UAAU,GAAG;MAC1B,IAAIC,GAAG,GAAG,MAAMC,KAAK,CAAC,6BAA6B,CAAC;MACpD,IAAIN,IAAI,GAAG,MAAMK,GAAG,CAACE,IAAI,EAAE;MAC3BN,OAAO,CAACD,IAAI,CAAC;MACbG,UAAU,CAAC,KAAK,CAAC;IACnB;IAEAC,UAAU,EAAE;EAEd,CAAC,EAAE,EAAE,CAAC;EACJ,oBACE;IAAA,wBACE;MAAA,UAAI;IAAK;MAAA;MAAA;MAAA;IAAA,QAAK,eACd,QAAC,IAAI;MAAC,OAAO,EAAE,CAAE;MAAA,UACdJ,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEQ,OAAO,CAACC,GAAG,CAAC,CAACC,KAAK,EAAEC,CAAC,KAAK;QAC/B,oBACE,QAAC,IAAI,CAAC,MAAM;UAAA,uBACV,QAAC,IAAI;YAAA,uBACH,QAAC,IAAI,CAAC,OAAO;cAAA,wBACX,QAAC,IAAI,CAAC,MAAM;gBAAA,UAAED,KAAK,CAACE;cAAK;gBAAA;gBAAA;gBAAA;cAAA,QAAe,eACxC,QAAC,IAAI,CAAC,WAAW;gBAAA,wBACf;kBAAA,UAAQ;gBAAO;kBAAA;kBAAA;kBAAA;gBAAA,QAAS,eACxB;kBAAA,UAAIF,KAAK,CAACG;gBAAU;kBAAA;kBAAA;kBAAA;gBAAA,QAAK,eACzB;kBAAA,UAAQ;gBAAa;kBAAA;kBAAA;kBAAA;gBAAA,QAAS,eAC9B;kBAAA,UAAIH,KAAK,CAACI;gBAAa;kBAAA;kBAAA;kBAAA;gBAAA,QAAK,eAC5B;kBAAA,UAAQ;gBAAQ;kBAAA;kBAAA;kBAAA;gBAAA,QAAS,eACzB;kBAAA,UAAIJ,KAAK,CAACK;gBAAQ;kBAAA;kBAAA;kBAAA;gBAAA,QAAK,eACvB;kBAAA,UAAQ;gBAAQ;kBAAA;kBAAA;kBAAA;gBAAA,QAAS,eACzB;kBAAA,UAAIL,KAAK,CAACM;gBAAQ;kBAAA;kBAAA;kBAAA;gBAAA,QAAK,eACvB;kBAAA,UAAQ;gBAAY;kBAAA;kBAAA;kBAAA;gBAAA,QAAS,eAC7B;kBAAA,UAAIN,KAAK,CAACO;gBAAY;kBAAA;kBAAA;kBAAA;gBAAA,QAAK;cAAA;gBAAA;gBAAA;gBAAA;cAAA,QACV;YAAA;cAAA;cAAA;cAAA;YAAA;UACN;YAAA;YAAA;YAAA;UAAA;QACV,GAjBSN,CAAC;UAAA;UAAA;UAAA;QAAA,QAkBL;MAElB,CAAC;IAAC;MAAA;MAAA;MAAA;IAAA,QACG,eACP,QAAC,SAAS;MAAA,uBACN,QAAC,OAAO;QAAA;QAAA;QAAA;MAAA;IAAW;MAAA;MAAA;MAAA;IAAA,QACT;EAAA,gBACb;AAEP;AAAC,GAhDuBZ,KAAK;AAAA,KAALA,KAAK;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}