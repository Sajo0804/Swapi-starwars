{"ast":null,"code":"var _jsxFileName = \"/Users/c.savela.smedberg/code_developer/swapi-starwars-api/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport Navbar from \"./components/Navbar\";\nimport { BrowserRouter as Router, Route, Routes } from \"react-router-dom\";\nimport { Container, Dimmer, Loader } from \"semantic-ui-react\";\nimport Films from \"./components/Films\";\nimport Home from \"./components/Home\";\nimport People from \"./components/People\";\nimport Planets from \"./components/Starships\";\nimport Species from \"./components/Species\";\nimport Starships from \"./components/Starships\";\nimport Vehicles from \"./components/Vehicles\";\nimport Buttons from \"./components/Buttons\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [people, setPeople] = useState([]);\n  const [films, setFilms] = useState([]);\n  const [starships, setStarships] = useState([]);\n  const [vehicles, setVehicles] = useState([]);\n  const [species, setSpecies] = useState([]);\n  const [planets, setPlanets] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [activePage, setPage] = useState([]);\n  useEffect(() => {\n    async function fetchPeople() {\n      let res = await fetch(\"https://swapi.dev/api/people\");\n      let data = await res.json();\n      setPage = setPeople(data.results);\n      setLoading(false);\n    }\n    async function fetchFilms() {\n      let res = await fetch(\"https://swapi.dev/api/films\");\n      let data = await res.json();\n      setFilms(data.results);\n      setLoading(false);\n    }\n    async function fetchStarships() {\n      let res = await fetch(\"https://swapi.dev/api/starships\");\n      let data = await res.json();\n      setStarships(data.results);\n      setLoading(false);\n    }\n    async function fetchVehicles() {\n      let res = await fetch(\"https://swapi.dev/api/vehicles\");\n      let data = await res.json();\n      setVehicles(data.results);\n      setLoading(false);\n    }\n    async function fetchSpecies() {\n      let res = await fetch(\"https://swapi.dev/api/species\");\n      let data = await res.json();\n      setSpecies(data.results);\n      setLoading(false);\n    }\n    async function fetchPlanets() {\n      let res = await fetch(\"https://swapi.dev/api/planets\");\n      let data = await res.json();\n      setPlanets(data.results);\n      setLoading(false);\n    }\n    fetchPeople();\n    fetchFilms();\n    fetchStarships();\n    fetchVehicles();\n    fetchSpecies();\n    fetchPlanets();\n  }, []);\n  function handleNextPage() {}\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Router, {\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Container, {\n        children: loading ? /*#__PURE__*/_jsxDEV(Dimmer, {\n          active: true,\n          inverted: true,\n          children: /*#__PURE__*/_jsxDEV(Loader, {\n            inverted: true,\n            children: \"Loading...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(Routes, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            path: \"/\",\n            element: /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 40\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/people\",\n            element: /*#__PURE__*/_jsxDEV(People, {\n              data: people\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 46\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 15\n          }, this), \"              \", /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/people\",\n            element: /*#__PURE__*/_jsxDEV(People, {\n              data: people\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 119\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 88\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/planets\",\n            element: /*#__PURE__*/_jsxDEV(Planets, {\n              data: planets\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 47\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/species\",\n            element: /*#__PURE__*/_jsxDEV(Species, {\n              data: species\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 47\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/starships\",\n            element: /*#__PURE__*/_jsxDEV(Starships, {\n              data: starships\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 26\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/vehicles\",\n            element: /*#__PURE__*/_jsxDEV(Vehicles, {\n              data: vehicles\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 48\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Container, {\n        children: /*#__PURE__*/_jsxDEV(Buttons, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(App, \"Mxc40WvQwV6h+dJ5AISUukWXVNk=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Navbar","BrowserRouter","Router","Route","Routes","Container","Dimmer","Loader","Films","Home","People","Planets","Species","Starships","Vehicles","Buttons","App","people","setPeople","films","setFilms","starships","setStarships","vehicles","setVehicles","species","setSpecies","planets","setPlanets","loading","setLoading","activePage","setPage","fetchPeople","res","fetch","data","json","results","fetchFilms","fetchStarships","fetchVehicles","fetchSpecies","fetchPlanets","handleNextPage"],"sources":["/Users/c.savela.smedberg/code_developer/swapi-starwars-api/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Navbar from \"./components/Navbar\";\nimport { BrowserRouter as Router, Route, Routes } from \"react-router-dom\";\nimport { Container, Dimmer, Loader } from \"semantic-ui-react\";\nimport Films from \"./components/Films\";\nimport Home from \"./components/Home\";\nimport People from \"./components/People\";\nimport Planets from \"./components/Starships\";\nimport Species from \"./components/Species\";\nimport Starships from \"./components/Starships\";\nimport Vehicles from \"./components/Vehicles\";\nimport Buttons from \"./components/Buttons\";\n\nfunction App() {\n  const [people, setPeople] = useState([]);\n  const [films, setFilms] = useState([]);\n  const [starships, setStarships] = useState([]);\n  const [vehicles, setVehicles] = useState([]);\n  const [species, setSpecies] = useState([]);\n  const [planets, setPlanets] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [activePage, setPage] = useState([]);\n\n  useEffect(() => {\n    async function fetchPeople() {\n      let res = await fetch(\"https://swapi.dev/api/people\");\n      let data = await res.json();\n      setPage = \n      setPeople(data.results);\n      setLoading(false);\n    }\n\n    async function fetchFilms() {\n      let res = await fetch(\"https://swapi.dev/api/films\");\n      let data = await res.json();\n      setFilms(data.results);\n      setLoading(false);\n    }\n\n    async function fetchStarships() {\n      let res = await fetch(\"https://swapi.dev/api/starships\");\n      let data = await res.json();\n      setStarships(data.results);\n      setLoading(false);\n    }\n\n    async function fetchVehicles() {\n      let res = await fetch(\"https://swapi.dev/api/vehicles\");\n      let data = await res.json();\n      setVehicles(data.results);\n      setLoading(false);\n    }\n\n    async function fetchSpecies() {\n      let res = await fetch(\"https://swapi.dev/api/species\");\n      let data = await res.json();\n      setSpecies(data.results);\n      setLoading(false);\n    }\n\n    async function fetchPlanets() {\n      let res = await fetch(\"https://swapi.dev/api/planets\");\n      let data = await res.json();\n      setPlanets(data.results);\n      setLoading(false);\n    }\n\n    fetchPeople();\n    fetchFilms();\n    fetchStarships();\n    fetchVehicles();\n    fetchSpecies();\n    fetchPlanets();\n  }, []);\n\n  function handleNextPage () {\n\n  }\n\n  return (\n    <>\n      <Router>\n        <Navbar />\n        <Container>\n          {loading ? (\n            <Dimmer active inverted>\n              <Loader inverted>Loading...</Loader>\n            </Dimmer>\n          ) : (\n            <Routes>\n              <Route path=\"/\" element={<Home />} />\n              {/* <Route path=\"/films\" element={<Films data={films} />} /> */}\n              <Route path=\"/people\" element={<People data={people} />} />              <Route path=\"/people\" element={<People data={people} />} />\n              <Route path=\"/planets\" element={<Planets data={planets} />} />\n              <Route path=\"/species\" element={<Species data={species} />} />\n              <Route\n                path=\"/starships\"\n                element={<Starships data={starships} />}\n              />\n              <Route path=\"/vehicles\" element={<Vehicles data={vehicles} />} />\n            </Routes>\n          )}\n        </Container>\n        <Container>\n          <Buttons></Buttons>\n        </Container>\n      </Router>\n    </>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}